create FUNCTION GET_SCORE_SINGLE(P_ID NUMBER) RETURN FLOAT AS
    V_CORRECTLY_ANSWERED    NUMBER(2);
    V_WRONG_ANSWER          NUMBER(2);
    V_TOTAL_CORRECT         NUMBER(2);
    V_UNANSWERED            NUMBER(2);
    V_SCORE_PER_GOOD_ANSWER FLOAT;
BEGIN
    SELECT COUNT(*) INTO V_UNANSWERED FROM TEST_QA WHERE ID = P_ID AND ANSWER IS NULL;

    SELECT COUNT(*)
    INTO V_CORRECTLY_ANSWERED
    FROM TEST_QA
             JOIN RASPUNSURI on TEST_QA.ID_A = RASPUNSURI.ID
    WHERE TEST_QA.ID = P_ID
      AND ANSWER = CORECT;

    SELECT COUNT(*)
    INTO V_TOTAL_CORRECT
    FROM TEST_QA
             JOIN RASPUNSURI on TEST_QA.ID_A = RASPUNSURI.ID
    WHERE TEST_QA.ID = P_ID
      AND CORECT = '1';

    V_WRONG_ANSWER := 6 - V_CORRECTLY_ANSWERED - V_UNANSWERED;
    V_SCORE_PER_GOOD_ANSWER := 10 / V_TOTAL_CORRECT;


    IF V_WRONG_ANSWER < V_CORRECTLY_ANSWERED THEN
        RETURN V_SCORE_PER_GOOD_ANSWER * (V_TOTAL_CORRECT - V_WRONG_ANSWER);
    ELSE
        RETURN 0;
    END IF;
end;
/

create FUNCTION GET_TEST_SCORE(P_EMAIL VARCHAR2) RETURN FLOAT AS
    V_SCORE FLOAT := 0;
BEGIN
    for row in (SELECT ID_QA FROM TESTE WHERE EMAIL = P_EMAIL)
        LOOP
            V_SCORE := V_SCORE + GET_SCORE_SINGLE(row.ID_QA);
        end loop;
    RETURN V_SCORE;
end;
/

